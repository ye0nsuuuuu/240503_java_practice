// 패키지 : 내부, 외부 , 폴더 개념이라 보면됨. 여기에 필요한 클래스들을 담아둔다.
package ex_240423;

// 클래스 , 1) 메인 메서드(함수) 가지고 있어서 실행하는 클래스 역할. 
//   	  2) 설계도로 사용하는 경우 입니다. -> 인스턴스를 생성하는 용도로 사용함. 
// 보라색으로 색상 구분이 되어 지는데, 예약어, 시스템에서 미리 예약되어서, 이름으로 사용이 안됨. 
public class TestClass1 {

	// public : 접근지정자, 어느 곳에서 든 다 볼수 있다. 다 접근이 가능하다. 
	// default, protected, private :  상속이라든지, 특정 조건에서 보이고, 접근이 가능함.
	
	// static : 전역으로 사용함, 메인을 실행을 하면, 해당 클래스들을 로드(불러옴)
	// 시스템에 전역공간(메모리) 미리 올라와 있다. 
	
	// 반대가 되는 개념, 인스턴스, -> 클래스를 생성자를 호출를해서 객체를 만든다. (인스턴스를 만든다.)
	
	// void : 직역, 공허한, 비어있는 , -> 리턴이 없다. 
	// main : 메서드 이름(함수 이름) 
	// 함수, 메서드가 4가지 경우 
	// 파라미터 , 리턴값
	// O,       O
	// O,       X
	// X,       O
	// X,       X
	
	// String[] args : 파라미터 (받는 변수, 매개변수)
	// String[] : 배열인데, 문자열 타입, 
	// args 변수명(참조형 타입: 객체)
	// 기본형: 바(byte) 숏(short) 인(int) 롱(long)
	// float(실수형), double(실수형)
	// boolean(true,false)
	// char : 한글자, 예) 'a'
	// 위에 8가지 제외한 나머지 타입을 모두다 참조형(레퍼런스타입).
	public static void main(String[] args) {
		// 메인 메서드로 시작해서 메인으로 끝난다. 
		System.out.println("예를 들어 메인 시작입니다. ");
		for(int i = 0; i < 10; i++) {
			System.out.println("for 문안에서 실행해보기 i 조회 : " + i);
		}
		System.out.println("for 문 종료");
		System.out.println("main 종료");
		
		// 디버깅 하는 방법. 
		// 라인 번호 앞에 , 더블 클릭 해서, 시작하는 중단점 남기고, 
		// 끝나는 중단점 남겨서, 
		// f11 누르면, 디버깅 모드 뜸. 최초 실행이면, 윈도우즈 입장 당황하니, 항상 허용 최초 한번 하고 
		// 실행하면, 됨. 그리고, 퍼스펙티브 모드, 여기서 기억하면, 됨. 
		

	}

}






